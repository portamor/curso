{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../Redux/reducer\";\nexport const loginSuccess = user => dispatch => {\n  dispatch({\n    type: LOGIN_SUCCESS,\n    payload: user\n  });\n  console.log('Usuario:', user);\n  console.log('isLoggedIn:', store.getState().isLoggedIn);\n};\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","loginSuccess","user","dispatch","type","LOGIN_SUCCESS","payload","console","log","store","getState","isLoggedIn"],"sources":["C:/Users/OS/Desktop/curso/Portamor-Front/src/Store/index.js"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../Redux/reducer\"\r\n\r\nexport const loginSuccess = (user) => (dispatch) => {\r\n  dispatch({ type: LOGIN_SUCCESS, payload: user });\r\n  console.log('Usuario:', user);\r\n  console.log('isLoggedIn:', store.getState().isLoggedIn);\r\n};\r\n\r\nexport const store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAMC,QAAQ,IAAK;EAClDA,QAAQ,CAAC;IAAEC,IAAI,EAAEC,aAAa;IAAEC,OAAO,EAAEJ;EAAK,CAAC,CAAC;EAChDK,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,IAAI,CAAC;EAC7BK,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,KAAK,CAACC,QAAQ,EAAE,CAACC,UAAU,CAAC;AACzD,CAAC;AAED,OAAO,MAAMF,KAAK,GAAGb,WAAW,CAACI,WAAW,EAACF,mBAAmB,CAACD,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AAEzF,eAAeU,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}